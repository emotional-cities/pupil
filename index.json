{
  "api/EmotionalCities.Pupil.DecodeImuData.html": {
    "href": "api/EmotionalCities.Pupil.DecodeImuData.html",
    "title": "Class DecodeImuData",
    "keywords": "Class DecodeImuData Represents an operator that decodes a sequence of IMU data frames. Inheritance Object DecodeImuData Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public class DecodeImuData Methods | Improve this Doc View Source Process(IObservable<NetMQMessage>) Decodes an observable sequence of IMU data frames retrieved from the Pupil Network API. Declaration public IObservable<ImuFrame> Process(IObservable<NetMQMessage> source) Parameters Type Name Description IObservable < NetMQMessage > source The sequence of Network API messages. Returns Type Description IObservable < ImuFrame > A sequence of ImuFrame objects representing the decoded IMU data. | Improve this Doc View Source Process(IObservable<Byte[]>) Decodes an observable sequence of binary encoded IMU data frames. Declaration public IObservable<ImuFrame> Process(IObservable<byte[]> source) Parameters Type Name Description IObservable < Byte []> source The sequence of IMU data frames encoded as raw binary data. Returns Type Description IObservable < ImuFrame > A sequence of ImuFrame objects representing the decoded IMU data."
  },
  "api/EmotionalCities.Pupil.DecodePupilGaze.html": {
    "href": "api/EmotionalCities.Pupil.DecodePupilGaze.html",
    "title": "Class DecodePupilGaze",
    "keywords": "Class DecodePupilGaze Represents an operator that decodes a sequence of binary encoded gaze measurements. Inheritance Object DecodePupilGaze Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public class DecodePupilGaze Methods | Improve this Doc View Source Process(IObservable<NetMQMessage>) Decodes an observable sequence of gaze measurements retrieved from the Pupil Network API. Declaration public IObservable<Point2f> Process(IObservable<NetMQMessage> source) Parameters Type Name Description IObservable < NetMQMessage > source The sequence of Network API messages. Returns Type Description IObservable < Point2f > A sequence of objects representing the decoded gaze measurement. | Improve this Doc View Source Process(IObservable<Byte[]>) Decodes an observable sequence of binary encoded gaze measurements. Declaration public IObservable<Point2f> Process(IObservable<byte[]> source) Parameters Type Name Description IObservable < Byte []> source The sequence of gaze measurements encoded as raw binary data. Returns Type Description IObservable < Point2f > A sequence of objects representing the decoded gaze measurement."
  },
  "api/EmotionalCities.Pupil.DecodeVideoFrame.html": {
    "href": "api/EmotionalCities.Pupil.DecodeVideoFrame.html",
    "title": "Class DecodeVideoFrame",
    "keywords": "Class DecodeVideoFrame Represents an operator that decodes a sequence of binary encoded video frames. Inheritance Object DecodeVideoFrame Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public class DecodeVideoFrame : Transform<byte[], IplImage> Properties | Improve this Doc View Source BinariesPath Gets or sets the path to the FFmpeg binaries used to decode the video frames. Declaration public string BinariesPath { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Process(IObservable<NetMQMessage>) Decodes an observable sequence of video frames retrieved from the Pupil Network API. Declaration public IObservable<IplImage> Process(IObservable<NetMQMessage> source) Parameters Type Name Description IObservable < NetMQMessage > source The sequence of Network API messages. Returns Type Description IObservable < IplImage > A sequence of objects representing the decoded frames. | Improve this Doc View Source Process(IObservable<Byte[]>) Decodes an observable sequence of binary encoded video frames. Declaration public override IObservable<IplImage> Process(IObservable<byte[]> source) Parameters Type Name Description IObservable < Byte []> source The sequence of video frames encoded as raw binary data. Returns Type Description IObservable < IplImage > A sequence of objects representing the decoded frames."
  },
  "api/EmotionalCities.Pupil.html": {
    "href": "api/EmotionalCities.Pupil.html",
    "title": "Namespace EmotionalCities.Pupil",
    "keywords": "Namespace EmotionalCities.Pupil Classes DecodeImuData Represents an operator that decodes a sequence of IMU data frames. DecodePupilGaze Represents an operator that decodes a sequence of binary encoded gaze measurements. DecodeVideoFrame Represents an operator that decodes a sequence of binary encoded video frames. PupilDevice Represents an operator that finds a pupil device in the local network interface and returns the sequence of all its sensors. SensorInfo Represents information about a pupil device sensor. SetControlValue Represents an operator that creates a sequence of messages to change the value of control properties in pupil device sensors. Structs ImuFrame Represents a single frame of IMU data containing both a buffer of motion samples and the array of timestamps for each sample in the buffer. Enums SensorType Specifies the type of a device sensor."
  },
  "api/EmotionalCities.Pupil.ImuFrame.html": {
    "href": "api/EmotionalCities.Pupil.ImuFrame.html",
    "title": "Struct ImuFrame",
    "keywords": "Struct ImuFrame Represents a single frame of IMU data containing both a buffer of motion samples and the array of timestamps for each sample in the buffer. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public struct ImuFrame Fields | Improve this Doc View Source Data The motion sensor data represented as a multi-channel matrix where rows are channels and columns are samples. Declaration public Mat Data Field Value Type Description Mat | Improve this Doc View Source Timestamp The array of 64-bit timestamps, in nanoseconds from 1 January 1970 for each IMU sample. Declaration public ulong[] Timestamp Field Value Type Description UInt64 []"
  },
  "api/EmotionalCities.Pupil.PupilDevice.html": {
    "href": "api/EmotionalCities.Pupil.PupilDevice.html",
    "title": "Class PupilDevice",
    "keywords": "Class PupilDevice Represents an operator that finds a pupil device in the local network interface and returns the sequence of all its sensors. Inheritance Object PupilDevice Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public class PupilDevice : Source<SensorInfo> Properties | Improve this Doc View Source Interface Gets or sets the interface for the network. Declaration public string Interface { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Generate() Finds a pupil device in the local network interface and returns an observable sequence of all its sensors. Declaration public override IObservable<SensorInfo> Generate() Returns Type Description IObservable < SensorInfo > A sequence of SensorInfo objects representing each of the pupil device sensors."
  },
  "api/EmotionalCities.Pupil.SensorInfo.html": {
    "href": "api/EmotionalCities.Pupil.SensorInfo.html",
    "title": "Class SensorInfo",
    "keywords": "Class SensorInfo Represents information about a pupil device sensor. Inheritance Object SensorInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public class SensorInfo Fields | Improve this Doc View Source CommandEndpoint The ZMQ end-point used to receive commands for configuring the pupil device sensor. Declaration public string CommandEndpoint Field Value Type Description String | Improve this Doc View Source DataEndpoint The ZMQ end-point used to stream sensor data. Declaration public string DataEndpoint Field Value Type Description String | Improve this Doc View Source SensorName The friendly name of the sensor. Declaration public string SensorName Field Value Type Description String | Improve this Doc View Source SensorType The type of the pupil device sensor. Declaration public SensorType SensorType Field Value Type Description SensorType | Improve this Doc View Source SensorUuid The universally unique identifier of the pupil device sensor. Declaration public string SensorUuid Field Value Type Description String"
  },
  "api/EmotionalCities.Pupil.SensorType.html": {
    "href": "api/EmotionalCities.Pupil.SensorType.html",
    "title": "Enum SensorType",
    "keywords": "Enum SensorType Specifies the type of a device sensor. Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public enum SensorType Fields Name Description Audio Specifies the sensor is a microphone or other audio capture device. Event Specifies the mobile device interaction event sensor. Gaze Specifies the gaze measurement sensor. Hardware The device type hosting all device-specific controls. Imu Specifies the sensor is a motion sensor or other IMU-like device. Key Specifies the touch screen or key press sensor. Led Specifies the LED sensor. Location Specifies the navigation system sensor for the device, if available. Video Specifies the sensor is a video capture device."
  },
  "api/EmotionalCities.Pupil.SetControlValue.html": {
    "href": "api/EmotionalCities.Pupil.SetControlValue.html",
    "title": "Class SetControlValue",
    "keywords": "Class SetControlValue Represents an operator that creates a sequence of messages to change the value of control properties in pupil device sensors. Inheritance Object SetControlValue Namespace : EmotionalCities.Pupil Assembly : EmotionalCities.Pupil.dll Syntax public class SetControlValue : Combinator<NetMQMessage> Properties | Improve this Doc View Source ControlId Gets or sets the identifier of the control property to update. Declaration public string ControlId { get; set; } Property Value Type Description String | Improve this Doc View Source SensorUuid Gets or sets the unique identifier of the device sensor containing the control property to update. Declaration public string SensorUuid { get; set; } Property Value Type Description String | Improve this Doc View Source Value Gets or sets the value used to update the control property. Declaration public string Value { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Process<TSource>(IObservable<TSource>) Creates an observable sequence of messages that can be used to change the value of control properties in pupil device sensors. Declaration public override IObservable<NetMQMessage> Process<TSource>(IObservable<TSource> source) Parameters Type Name Description IObservable <TSource> source The sequence containing the notifications used for emitting new control messages. Returns Type Description IObservable < NetMQMessage > The sequence of created objects. Type Parameters Name Description TSource The type of the elements in the source sequence."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Getting Started",
    "keywords": "Getting Started Download Bonsai . From the package manager, search and install the Emotional Cities - Pupil package."
  },
  "index.html": {
    "href": "index.html",
    "title": "Emotional Cities - Pupil Documentation",
    "keywords": "Emotional Cities - Pupil Documentation Bonsai Library containing interfaces for streaming data from Pupil Labs eye tracking hardware. Warning These docs are under active development, feel free to contribute by either raising an issue or following the links to Improve this Doc . This package was developed for the eMOTIONAL CITIES Project, which received funding from European Union’s Horizon 2020 research and innovation programme, under the grant agreement No 945307. The eMOTIONAL CITIES Project is a consortium of 12 partners co-coordinated by IGOT and FMUL, taking place between 2021 and 2025. More information at https://emotionalcities-h2020.eu/"
  }
}